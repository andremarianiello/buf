// Copyright 2020 Buf Technologies Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.11.4
// source: bufbuild/buf/io/v1beta1/io.proto

package iov1beta1

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FileScheme int32

const (
	FileScheme_FILE_SCHEME_UNSPECIFIED FileScheme = 0
	FileScheme_FILE_SCHEME_HTTP        FileScheme = 1
	FileScheme_FILE_SCHEME_HTTPS       FileScheme = 2
	FileScheme_FILE_SCHEME_FILE        FileScheme = 3
	FileScheme_FILE_SCHEME_STDIO       FileScheme = 4
	FileScheme_FILE_SCHEME_NULL        FileScheme = 5
)

// Enum value maps for FileScheme.
var (
	FileScheme_name = map[int32]string{
		0: "FILE_SCHEME_UNSPECIFIED",
		1: "FILE_SCHEME_HTTP",
		2: "FILE_SCHEME_HTTPS",
		3: "FILE_SCHEME_FILE",
		4: "FILE_SCHEME_STDIO",
		5: "FILE_SCHEME_NULL",
	}
	FileScheme_value = map[string]int32{
		"FILE_SCHEME_UNSPECIFIED": 0,
		"FILE_SCHEME_HTTP":        1,
		"FILE_SCHEME_HTTPS":       2,
		"FILE_SCHEME_FILE":        3,
		"FILE_SCHEME_STDIO":       4,
		"FILE_SCHEME_NULL":        5,
	}
)

func (x FileScheme) Enum() *FileScheme {
	p := new(FileScheme)
	*p = x
	return p
}

func (x FileScheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileScheme) Descriptor() protoreflect.EnumDescriptor {
	return file_bufbuild_buf_io_v1beta1_io_proto_enumTypes[0].Descriptor()
}

func (FileScheme) Type() protoreflect.EnumType {
	return &file_bufbuild_buf_io_v1beta1_io_proto_enumTypes[0]
}

func (x FileScheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileScheme.Descriptor instead.
func (FileScheme) EnumDescriptor() ([]byte, []int) {
	return file_bufbuild_buf_io_v1beta1_io_proto_rawDescGZIP(), []int{0}
}

type ImageFormat int32

const (
	ImageFormat_IMAGE_FORMAT_UNSPECIFIED ImageFormat = 0
	ImageFormat_IMAGE_FORMAT_BIN         ImageFormat = 1
	ImageFormat_IMAGE_FORMAT_BINGZ       ImageFormat = 2
	ImageFormat_IMAGE_FORMAT_JSON        ImageFormat = 3
	ImageFormat_IMAGE_FORMAT_JSONGZ      ImageFormat = 4
)

// Enum value maps for ImageFormat.
var (
	ImageFormat_name = map[int32]string{
		0: "IMAGE_FORMAT_UNSPECIFIED",
		1: "IMAGE_FORMAT_BIN",
		2: "IMAGE_FORMAT_BINGZ",
		3: "IMAGE_FORMAT_JSON",
		4: "IMAGE_FORMAT_JSONGZ",
	}
	ImageFormat_value = map[string]int32{
		"IMAGE_FORMAT_UNSPECIFIED": 0,
		"IMAGE_FORMAT_BIN":         1,
		"IMAGE_FORMAT_BINGZ":       2,
		"IMAGE_FORMAT_JSON":        3,
		"IMAGE_FORMAT_JSONGZ":      4,
	}
)

func (x ImageFormat) Enum() *ImageFormat {
	p := new(ImageFormat)
	*p = x
	return p
}

func (x ImageFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_bufbuild_buf_io_v1beta1_io_proto_enumTypes[1].Descriptor()
}

func (ImageFormat) Type() protoreflect.EnumType {
	return &file_bufbuild_buf_io_v1beta1_io_proto_enumTypes[1]
}

func (x ImageFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImageFormat.Descriptor instead.
func (ImageFormat) EnumDescriptor() ([]byte, []int) {
	return file_bufbuild_buf_io_v1beta1_io_proto_rawDescGZIP(), []int{1}
}

type ArchiveFormat int32

const (
	ArchiveFormat_ARCHIVE_FORMAT_UNSPECIFIED ArchiveFormat = 0
	ArchiveFormat_ARCHIVE_FORMAT_TAR         ArchiveFormat = 1
	ArchiveFormat_ARCHIVE_FORMAT_TARGZ       ArchiveFormat = 2
)

// Enum value maps for ArchiveFormat.
var (
	ArchiveFormat_name = map[int32]string{
		0: "ARCHIVE_FORMAT_UNSPECIFIED",
		1: "ARCHIVE_FORMAT_TAR",
		2: "ARCHIVE_FORMAT_TARGZ",
	}
	ArchiveFormat_value = map[string]int32{
		"ARCHIVE_FORMAT_UNSPECIFIED": 0,
		"ARCHIVE_FORMAT_TAR":         1,
		"ARCHIVE_FORMAT_TARGZ":       2,
	}
)

func (x ArchiveFormat) Enum() *ArchiveFormat {
	p := new(ArchiveFormat)
	*p = x
	return p
}

func (x ArchiveFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArchiveFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_bufbuild_buf_io_v1beta1_io_proto_enumTypes[2].Descriptor()
}

func (ArchiveFormat) Type() protoreflect.EnumType {
	return &file_bufbuild_buf_io_v1beta1_io_proto_enumTypes[2]
}

func (x ArchiveFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArchiveFormat.Descriptor instead.
func (ArchiveFormat) EnumDescriptor() ([]byte, []int) {
	return file_bufbuild_buf_io_v1beta1_io_proto_rawDescGZIP(), []int{2}
}

type GitScheme int32

const (
	GitScheme_GIT_SCHEME_UNSPECIFIED GitScheme = 0
	GitScheme_GIT_SCHEME_HTTP        GitScheme = 1
	GitScheme_GIT_SCHEME_HTTPS       GitScheme = 2
	GitScheme_GIT_SCHEME_FILE        GitScheme = 3
	GitScheme_GIT_SCHEME_SSH         GitScheme = 4
)

// Enum value maps for GitScheme.
var (
	GitScheme_name = map[int32]string{
		0: "GIT_SCHEME_UNSPECIFIED",
		1: "GIT_SCHEME_HTTP",
		2: "GIT_SCHEME_HTTPS",
		3: "GIT_SCHEME_FILE",
		4: "GIT_SCHEME_SSH",
	}
	GitScheme_value = map[string]int32{
		"GIT_SCHEME_UNSPECIFIED": 0,
		"GIT_SCHEME_HTTP":        1,
		"GIT_SCHEME_HTTPS":       2,
		"GIT_SCHEME_FILE":        3,
		"GIT_SCHEME_SSH":         4,
	}
)

func (x GitScheme) Enum() *GitScheme {
	p := new(GitScheme)
	*p = x
	return p
}

func (x GitScheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GitScheme) Descriptor() protoreflect.EnumDescriptor {
	return file_bufbuild_buf_io_v1beta1_io_proto_enumTypes[3].Descriptor()
}

func (GitScheme) Type() protoreflect.EnumType {
	return &file_bufbuild_buf_io_v1beta1_io_proto_enumTypes[3]
}

func (x GitScheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GitScheme.Descriptor instead.
func (GitScheme) EnumDescriptor() ([]byte, []int) {
	return file_bufbuild_buf_io_v1beta1_io_proto_rawDescGZIP(), []int{3}
}

type GitSubmoduleBehavior int32

const (
	GitSubmoduleBehavior_GIT_SUBMODULE_BEHAVIOR_UNSPECIFIED GitSubmoduleBehavior = 0
	GitSubmoduleBehavior_GIT_SUBMODULE_BEHAVIOR_NONE        GitSubmoduleBehavior = 1
	GitSubmoduleBehavior_GIT_SUBMODULE_BEHAVIOR_RECURSIVE   GitSubmoduleBehavior = 2
)

// Enum value maps for GitSubmoduleBehavior.
var (
	GitSubmoduleBehavior_name = map[int32]string{
		0: "GIT_SUBMODULE_BEHAVIOR_UNSPECIFIED",
		1: "GIT_SUBMODULE_BEHAVIOR_NONE",
		2: "GIT_SUBMODULE_BEHAVIOR_RECURSIVE",
	}
	GitSubmoduleBehavior_value = map[string]int32{
		"GIT_SUBMODULE_BEHAVIOR_UNSPECIFIED": 0,
		"GIT_SUBMODULE_BEHAVIOR_NONE":        1,
		"GIT_SUBMODULE_BEHAVIOR_RECURSIVE":   2,
	}
)

func (x GitSubmoduleBehavior) Enum() *GitSubmoduleBehavior {
	p := new(GitSubmoduleBehavior)
	*p = x
	return p
}

func (x GitSubmoduleBehavior) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GitSubmoduleBehavior) Descriptor() protoreflect.EnumDescriptor {
	return file_bufbuild_buf_io_v1beta1_io_proto_enumTypes[4].Descriptor()
}

func (GitSubmoduleBehavior) Type() protoreflect.EnumType {
	return &file_bufbuild_buf_io_v1beta1_io_proto_enumTypes[4]
}

func (x GitSubmoduleBehavior) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GitSubmoduleBehavior.Descriptor instead.
func (GitSubmoduleBehavior) EnumDescriptor() ([]byte, []int) {
	return file_bufbuild_buf_io_v1beta1_io_proto_rawDescGZIP(), []int{4}
}

type BucketScheme int32

const (
	BucketScheme_BUCKET_SCHEME_UNSPECIFIED BucketScheme = 0
	BucketScheme_BUCKET_SCHEME_DIR         BucketScheme = 1
)

// Enum value maps for BucketScheme.
var (
	BucketScheme_name = map[int32]string{
		0: "BUCKET_SCHEME_UNSPECIFIED",
		1: "BUCKET_SCHEME_DIR",
	}
	BucketScheme_value = map[string]int32{
		"BUCKET_SCHEME_UNSPECIFIED": 0,
		"BUCKET_SCHEME_DIR":         1,
	}
)

func (x BucketScheme) Enum() *BucketScheme {
	p := new(BucketScheme)
	*p = x
	return p
}

func (x BucketScheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BucketScheme) Descriptor() protoreflect.EnumDescriptor {
	return file_bufbuild_buf_io_v1beta1_io_proto_enumTypes[5].Descriptor()
}

func (BucketScheme) Type() protoreflect.EnumType {
	return &file_bufbuild_buf_io_v1beta1_io_proto_enumTypes[5]
}

func (x BucketScheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BucketScheme.Descriptor instead.
func (BucketScheme) EnumDescriptor() ([]byte, []int) {
	return file_bufbuild_buf_io_v1beta1_io_proto_rawDescGZIP(), []int{5}
}

type ImageRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileScheme  FileScheme  `protobuf:"varint,1,opt,name=file_scheme,json=fileScheme,proto3,enum=bufbuild.buf.io.v1beta1.FileScheme" json:"file_scheme,omitempty"`
	ImageFormat ImageFormat `protobuf:"varint,2,opt,name=image_format,json=imageFormat,proto3,enum=bufbuild.buf.io.v1beta1.ImageFormat" json:"image_format,omitempty"`
	// path is the path of the image.
	//
	// This path will be local to the system and not normalized.
	// This path will not include the scheme, if any.
	// If the type is stdio or null, this will be empty.
	Path string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *ImageRef) Reset() {
	*x = ImageRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageRef) ProtoMessage() {}

func (x *ImageRef) ProtoReflect() protoreflect.Message {
	mi := &file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageRef.ProtoReflect.Descriptor instead.
func (*ImageRef) Descriptor() ([]byte, []int) {
	return file_bufbuild_buf_io_v1beta1_io_proto_rawDescGZIP(), []int{0}
}

func (x *ImageRef) GetFileScheme() FileScheme {
	if x != nil {
		return x.FileScheme
	}
	return FileScheme_FILE_SCHEME_UNSPECIFIED
}

func (x *ImageRef) GetImageFormat() ImageFormat {
	if x != nil {
		return x.ImageFormat
	}
	return ImageFormat_IMAGE_FORMAT_UNSPECIFIED
}

func (x *ImageRef) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ArchiveRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileScheme    FileScheme    `protobuf:"varint,1,opt,name=file_scheme,json=fileScheme,proto3,enum=bufbuild.buf.io.v1beta1.FileScheme" json:"file_scheme,omitempty"`
	ArchiveFormat ArchiveFormat `protobuf:"varint,2,opt,name=archive_format,json=archiveFormat,proto3,enum=bufbuild.buf.io.v1beta1.ArchiveFormat" json:"archive_format,omitempty"`
	// path is the path of the archive.
	//
	// This path will be local to the system and not normalized.
	// This path will not include the scheme, if any.
	// If the type is stdio or devnull, this will be empty.
	Path            string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	StripComponents uint32 `protobuf:"varint,4,opt,name=strip_components,json=stripComponents,proto3" json:"strip_components,omitempty"`
}

func (x *ArchiveRef) Reset() {
	*x = ArchiveRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveRef) ProtoMessage() {}

func (x *ArchiveRef) ProtoReflect() protoreflect.Message {
	mi := &file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveRef.ProtoReflect.Descriptor instead.
func (*ArchiveRef) Descriptor() ([]byte, []int) {
	return file_bufbuild_buf_io_v1beta1_io_proto_rawDescGZIP(), []int{1}
}

func (x *ArchiveRef) GetFileScheme() FileScheme {
	if x != nil {
		return x.FileScheme
	}
	return FileScheme_FILE_SCHEME_UNSPECIFIED
}

func (x *ArchiveRef) GetArchiveFormat() ArchiveFormat {
	if x != nil {
		return x.ArchiveFormat
	}
	return ArchiveFormat_ARCHIVE_FORMAT_UNSPECIFIED
}

func (x *ArchiveRef) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ArchiveRef) GetStripComponents() uint32 {
	if x != nil {
		return x.StripComponents
	}
	return 0
}

type GitRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GitScheme GitScheme `protobuf:"varint,1,opt,name=git_scheme,json=gitScheme,proto3,enum=bufbuild.buf.io.v1beta1.GitScheme" json:"git_scheme,omitempty"`
	// path is the path of the archive.
	//
	// This path will be local to the system and not normalized.
	// This path will not include the scheme, if any.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Types that are assignable to Reference:
	//	*GitRef_Branch
	//	*GitRef_Tag
	Reference            isGitRef_Reference   `protobuf_oneof:"reference"`
	GitSubmoduleBehavior GitSubmoduleBehavior `protobuf:"varint,5,opt,name=git_submodule_behavior,json=gitSubmoduleBehavior,proto3,enum=bufbuild.buf.io.v1beta1.GitSubmoduleBehavior" json:"git_submodule_behavior,omitempty"`
}

func (x *GitRef) Reset() {
	*x = GitRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitRef) ProtoMessage() {}

func (x *GitRef) ProtoReflect() protoreflect.Message {
	mi := &file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitRef.ProtoReflect.Descriptor instead.
func (*GitRef) Descriptor() ([]byte, []int) {
	return file_bufbuild_buf_io_v1beta1_io_proto_rawDescGZIP(), []int{2}
}

func (x *GitRef) GetGitScheme() GitScheme {
	if x != nil {
		return x.GitScheme
	}
	return GitScheme_GIT_SCHEME_UNSPECIFIED
}

func (x *GitRef) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (m *GitRef) GetReference() isGitRef_Reference {
	if m != nil {
		return m.Reference
	}
	return nil
}

func (x *GitRef) GetBranch() string {
	if x, ok := x.GetReference().(*GitRef_Branch); ok {
		return x.Branch
	}
	return ""
}

func (x *GitRef) GetTag() string {
	if x, ok := x.GetReference().(*GitRef_Tag); ok {
		return x.Tag
	}
	return ""
}

func (x *GitRef) GetGitSubmoduleBehavior() GitSubmoduleBehavior {
	if x != nil {
		return x.GitSubmoduleBehavior
	}
	return GitSubmoduleBehavior_GIT_SUBMODULE_BEHAVIOR_UNSPECIFIED
}

type isGitRef_Reference interface {
	isGitRef_Reference()
}

type GitRef_Branch struct {
	Branch string `protobuf:"bytes,3,opt,name=branch,proto3,oneof"`
}

type GitRef_Tag struct {
	Tag string `protobuf:"bytes,4,opt,name=tag,proto3,oneof"`
}

func (*GitRef_Branch) isGitRef_Reference() {}

func (*GitRef_Tag) isGitRef_Reference() {}

type BucketRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketScheme BucketScheme `protobuf:"varint,1,opt,name=bucket_scheme,json=bucketScheme,proto3,enum=bufbuild.buf.io.v1beta1.BucketScheme" json:"bucket_scheme,omitempty"`
	// path is the path of the bucket.
	//
	// This path will be local to the system and not normalized.
	// This path will not include the scheme, if any.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *BucketRef) Reset() {
	*x = BucketRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketRef) ProtoMessage() {}

func (x *BucketRef) ProtoReflect() protoreflect.Message {
	mi := &file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketRef.ProtoReflect.Descriptor instead.
func (*BucketRef) Descriptor() ([]byte, []int) {
	return file_bufbuild_buf_io_v1beta1_io_proto_rawDescGZIP(), []int{3}
}

func (x *BucketRef) GetBucketScheme() BucketScheme {
	if x != nil {
		return x.BucketScheme
	}
	return BucketScheme_BUCKET_SCHEME_UNSPECIFIED
}

func (x *BucketRef) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type SourceRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*SourceRef_ArchiveRef
	//	*SourceRef_GitRef
	//	*SourceRef_BucketRef
	Value isSourceRef_Value `protobuf_oneof:"value"`
}

func (x *SourceRef) Reset() {
	*x = SourceRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceRef) ProtoMessage() {}

func (x *SourceRef) ProtoReflect() protoreflect.Message {
	mi := &file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceRef.ProtoReflect.Descriptor instead.
func (*SourceRef) Descriptor() ([]byte, []int) {
	return file_bufbuild_buf_io_v1beta1_io_proto_rawDescGZIP(), []int{4}
}

func (m *SourceRef) GetValue() isSourceRef_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *SourceRef) GetArchiveRef() *ArchiveRef {
	if x, ok := x.GetValue().(*SourceRef_ArchiveRef); ok {
		return x.ArchiveRef
	}
	return nil
}

func (x *SourceRef) GetGitRef() *GitRef {
	if x, ok := x.GetValue().(*SourceRef_GitRef); ok {
		return x.GitRef
	}
	return nil
}

func (x *SourceRef) GetBucketRef() *BucketRef {
	if x, ok := x.GetValue().(*SourceRef_BucketRef); ok {
		return x.BucketRef
	}
	return nil
}

type isSourceRef_Value interface {
	isSourceRef_Value()
}

type SourceRef_ArchiveRef struct {
	ArchiveRef *ArchiveRef `protobuf:"bytes,1,opt,name=archive_ref,json=archiveRef,proto3,oneof"`
}

type SourceRef_GitRef struct {
	GitRef *GitRef `protobuf:"bytes,2,opt,name=git_ref,json=gitRef,proto3,oneof"`
}

type SourceRef_BucketRef struct {
	BucketRef *BucketRef `protobuf:"bytes,3,opt,name=bucket_ref,json=bucketRef,proto3,oneof"`
}

func (*SourceRef_ArchiveRef) isSourceRef_Value() {}

func (*SourceRef_GitRef) isSourceRef_Value() {}

func (*SourceRef_BucketRef) isSourceRef_Value() {}

type InputRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*InputRef_ImageRef
	//	*InputRef_SourceRef
	Value isInputRef_Value `protobuf_oneof:"value"`
}

func (x *InputRef) Reset() {
	*x = InputRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputRef) ProtoMessage() {}

func (x *InputRef) ProtoReflect() protoreflect.Message {
	mi := &file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputRef.ProtoReflect.Descriptor instead.
func (*InputRef) Descriptor() ([]byte, []int) {
	return file_bufbuild_buf_io_v1beta1_io_proto_rawDescGZIP(), []int{5}
}

func (m *InputRef) GetValue() isInputRef_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *InputRef) GetImageRef() *ImageRef {
	if x, ok := x.GetValue().(*InputRef_ImageRef); ok {
		return x.ImageRef
	}
	return nil
}

func (x *InputRef) GetSourceRef() *SourceRef {
	if x, ok := x.GetValue().(*InputRef_SourceRef); ok {
		return x.SourceRef
	}
	return nil
}

type isInputRef_Value interface {
	isInputRef_Value()
}

type InputRef_ImageRef struct {
	ImageRef *ImageRef `protobuf:"bytes,1,opt,name=image_ref,json=imageRef,proto3,oneof"`
}

type InputRef_SourceRef struct {
	SourceRef *SourceRef `protobuf:"bytes,2,opt,name=source_ref,json=sourceRef,proto3,oneof"`
}

func (*InputRef_ImageRef) isInputRef_Value() {}

func (*InputRef_SourceRef) isInputRef_Value() {}

var File_bufbuild_buf_io_v1beta1_io_proto protoreflect.FileDescriptor

var file_bufbuild_buf_io_v1beta1_io_proto_rawDesc = []byte{
	0x0a, 0x20, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x62, 0x75, 0x66, 0x2f, 0x69,
	0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x17, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x62, 0x75, 0x66,
	0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x22, 0xad, 0x01, 0x0a, 0x08,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x12, 0x44, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e,
	0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6f, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x47,
	0x0a, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e,
	0x62, 0x75, 0x66, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0b, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0xe0, 0x01, 0x0a, 0x0a,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x66, 0x12, 0x44, 0x0a, 0x0b, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x23, 0x2e, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x69,
	0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x65, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65,
	0x12, 0x4d, 0x0a, 0x0e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x62, 0x75, 0x66, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x52, 0x0d, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73,
	0x74, 0x72, 0x69, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xff,
	0x01, 0x0a, 0x06, 0x47, 0x69, 0x74, 0x52, 0x65, 0x66, 0x12, 0x41, 0x0a, 0x0a, 0x67, 0x69, 0x74,
	0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6f, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x69, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x52, 0x09, 0x67, 0x69, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x18, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x03, 0x74, 0x61,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x63,
	0x0a, 0x16, 0x67, 0x69, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f,
	0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d,
	0x2e, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6f,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x69, 0x74, 0x53, 0x75, 0x62, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x52, 0x14, 0x67,
	0x69, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x42, 0x0b, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x22, 0x6b, 0x0a, 0x09, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x66, 0x12, 0x4a, 0x0a,
	0x0d, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e,
	0x62, 0x75, 0x66, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x0c, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0xdd, 0x01,
	0x0a, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x12, 0x46, 0x0a, 0x0b, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x62, 0x75, 0x66, 0x2e,
	0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x66, 0x12, 0x3a, 0x0a, 0x07, 0x67, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e,
	0x62, 0x75, 0x66, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47,
	0x69, 0x74, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x06, 0x67, 0x69, 0x74, 0x52, 0x65, 0x66, 0x12,
	0x43, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x62,
	0x75, 0x66, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x09, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x66, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9a, 0x01,
	0x0a, 0x08, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x66, 0x12, 0x40, 0x0a, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6f, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66,
	0x48, 0x00, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x12, 0x43, 0x0a, 0x0a,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x62, 0x75, 0x66, 0x2e,
	0x69, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x66, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0x99, 0x01, 0x0a, 0x0a, 0x46,
	0x69, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x49, 0x4c,
	0x45, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53,
	0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11,
	0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x48, 0x54, 0x54, 0x50,
	0x53, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x43, 0x48, 0x45,
	0x4d, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x49, 0x4c,
	0x45, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x44, 0x49, 0x4f, 0x10, 0x04,
	0x12, 0x14, 0x0a, 0x10, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f,
	0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x05, 0x2a, 0x89, 0x01, 0x0a, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x18, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f,
	0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x4f,
	0x52, 0x4d, 0x41, 0x54, 0x5f, 0x42, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4d,
	0x41, 0x47, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x42, 0x49, 0x4e, 0x47, 0x5a,
	0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x4d,
	0x41, 0x54, 0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4d, 0x41,
	0x47, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x47, 0x5a,
	0x10, 0x04, 0x2a, 0x61, 0x0a, 0x0d, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x5f, 0x46,
	0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x5f, 0x46,
	0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x54, 0x41, 0x52, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x41,
	0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x54, 0x41,
	0x52, 0x47, 0x5a, 0x10, 0x02, 0x2a, 0x7b, 0x0a, 0x09, 0x47, 0x69, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x49, 0x54, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x47, 0x49, 0x54, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x48, 0x54, 0x54,
	0x50, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x49, 0x54, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d,
	0x45, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x53, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x49, 0x54,
	0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x12,
	0x0a, 0x0e, 0x47, 0x49, 0x54, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x53, 0x53, 0x48,
	0x10, 0x04, 0x2a, 0x85, 0x01, 0x0a, 0x14, 0x47, 0x69, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x22, 0x47,
	0x49, 0x54, 0x5f, 0x53, 0x55, 0x42, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x42, 0x45, 0x48,
	0x41, 0x56, 0x49, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x47, 0x49, 0x54, 0x5f, 0x53, 0x55, 0x42, 0x4d, 0x4f,
	0x44, 0x55, 0x4c, 0x45, 0x5f, 0x42, 0x45, 0x48, 0x41, 0x56, 0x49, 0x4f, 0x52, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x01, 0x12, 0x24, 0x0a, 0x20, 0x47, 0x49, 0x54, 0x5f, 0x53, 0x55, 0x42, 0x4d,
	0x4f, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x42, 0x45, 0x48, 0x41, 0x56, 0x49, 0x4f, 0x52, 0x5f, 0x52,
	0x45, 0x43, 0x55, 0x52, 0x53, 0x49, 0x56, 0x45, 0x10, 0x02, 0x2a, 0x44, 0x0a, 0x0c, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x42, 0x55,
	0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x55, 0x43,
	0x4b, 0x45, 0x54, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x44, 0x49, 0x52, 0x10, 0x01,
	0x42, 0x0b, 0x5a, 0x09, 0x69, 0x6f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bufbuild_buf_io_v1beta1_io_proto_rawDescOnce sync.Once
	file_bufbuild_buf_io_v1beta1_io_proto_rawDescData = file_bufbuild_buf_io_v1beta1_io_proto_rawDesc
)

func file_bufbuild_buf_io_v1beta1_io_proto_rawDescGZIP() []byte {
	file_bufbuild_buf_io_v1beta1_io_proto_rawDescOnce.Do(func() {
		file_bufbuild_buf_io_v1beta1_io_proto_rawDescData = protoimpl.X.CompressGZIP(file_bufbuild_buf_io_v1beta1_io_proto_rawDescData)
	})
	return file_bufbuild_buf_io_v1beta1_io_proto_rawDescData
}

var file_bufbuild_buf_io_v1beta1_io_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_bufbuild_buf_io_v1beta1_io_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_bufbuild_buf_io_v1beta1_io_proto_goTypes = []interface{}{
	(FileScheme)(0),           // 0: bufbuild.buf.io.v1beta1.FileScheme
	(ImageFormat)(0),          // 1: bufbuild.buf.io.v1beta1.ImageFormat
	(ArchiveFormat)(0),        // 2: bufbuild.buf.io.v1beta1.ArchiveFormat
	(GitScheme)(0),            // 3: bufbuild.buf.io.v1beta1.GitScheme
	(GitSubmoduleBehavior)(0), // 4: bufbuild.buf.io.v1beta1.GitSubmoduleBehavior
	(BucketScheme)(0),         // 5: bufbuild.buf.io.v1beta1.BucketScheme
	(*ImageRef)(nil),          // 6: bufbuild.buf.io.v1beta1.ImageRef
	(*ArchiveRef)(nil),        // 7: bufbuild.buf.io.v1beta1.ArchiveRef
	(*GitRef)(nil),            // 8: bufbuild.buf.io.v1beta1.GitRef
	(*BucketRef)(nil),         // 9: bufbuild.buf.io.v1beta1.BucketRef
	(*SourceRef)(nil),         // 10: bufbuild.buf.io.v1beta1.SourceRef
	(*InputRef)(nil),          // 11: bufbuild.buf.io.v1beta1.InputRef
}
var file_bufbuild_buf_io_v1beta1_io_proto_depIdxs = []int32{
	0,  // 0: bufbuild.buf.io.v1beta1.ImageRef.file_scheme:type_name -> bufbuild.buf.io.v1beta1.FileScheme
	1,  // 1: bufbuild.buf.io.v1beta1.ImageRef.image_format:type_name -> bufbuild.buf.io.v1beta1.ImageFormat
	0,  // 2: bufbuild.buf.io.v1beta1.ArchiveRef.file_scheme:type_name -> bufbuild.buf.io.v1beta1.FileScheme
	2,  // 3: bufbuild.buf.io.v1beta1.ArchiveRef.archive_format:type_name -> bufbuild.buf.io.v1beta1.ArchiveFormat
	3,  // 4: bufbuild.buf.io.v1beta1.GitRef.git_scheme:type_name -> bufbuild.buf.io.v1beta1.GitScheme
	4,  // 5: bufbuild.buf.io.v1beta1.GitRef.git_submodule_behavior:type_name -> bufbuild.buf.io.v1beta1.GitSubmoduleBehavior
	5,  // 6: bufbuild.buf.io.v1beta1.BucketRef.bucket_scheme:type_name -> bufbuild.buf.io.v1beta1.BucketScheme
	7,  // 7: bufbuild.buf.io.v1beta1.SourceRef.archive_ref:type_name -> bufbuild.buf.io.v1beta1.ArchiveRef
	8,  // 8: bufbuild.buf.io.v1beta1.SourceRef.git_ref:type_name -> bufbuild.buf.io.v1beta1.GitRef
	9,  // 9: bufbuild.buf.io.v1beta1.SourceRef.bucket_ref:type_name -> bufbuild.buf.io.v1beta1.BucketRef
	6,  // 10: bufbuild.buf.io.v1beta1.InputRef.image_ref:type_name -> bufbuild.buf.io.v1beta1.ImageRef
	10, // 11: bufbuild.buf.io.v1beta1.InputRef.source_ref:type_name -> bufbuild.buf.io.v1beta1.SourceRef
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_bufbuild_buf_io_v1beta1_io_proto_init() }
func file_bufbuild_buf_io_v1beta1_io_proto_init() {
	if File_bufbuild_buf_io_v1beta1_io_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*GitRef_Branch)(nil),
		(*GitRef_Tag)(nil),
	}
	file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*SourceRef_ArchiveRef)(nil),
		(*SourceRef_GitRef)(nil),
		(*SourceRef_BucketRef)(nil),
	}
	file_bufbuild_buf_io_v1beta1_io_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*InputRef_ImageRef)(nil),
		(*InputRef_SourceRef)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bufbuild_buf_io_v1beta1_io_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bufbuild_buf_io_v1beta1_io_proto_goTypes,
		DependencyIndexes: file_bufbuild_buf_io_v1beta1_io_proto_depIdxs,
		EnumInfos:         file_bufbuild_buf_io_v1beta1_io_proto_enumTypes,
		MessageInfos:      file_bufbuild_buf_io_v1beta1_io_proto_msgTypes,
	}.Build()
	File_bufbuild_buf_io_v1beta1_io_proto = out.File
	file_bufbuild_buf_io_v1beta1_io_proto_rawDesc = nil
	file_bufbuild_buf_io_v1beta1_io_proto_goTypes = nil
	file_bufbuild_buf_io_v1beta1_io_proto_depIdxs = nil
}
